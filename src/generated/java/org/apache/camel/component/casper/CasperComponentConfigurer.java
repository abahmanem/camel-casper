/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.component.casper;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.ExtendedPropertyConfigurerGetter;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.spi.ConfigurerStrategy;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.support.component.PropertyConfigurerSupport;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class CasperComponentConfigurer extends PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    private org.apache.camel.component.casper.CasperConfiguration getOrCreateConfiguration(CasperComponent target) {
        if (target.getConfiguration() == null) {
            target.setConfiguration(new org.apache.camel.component.casper.CasperConfiguration());
        }
        return target.getConfiguration();
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        CasperComponent target = (CasperComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": target.setAutowiredEnabled(property(camelContext, boolean.class, value)); return true;
        case "blockhash":
        case "blockHash": getOrCreateConfiguration(target).setBlockHash(property(camelContext, java.lang.String.class, value)); return true;
        case "blockheight":
        case "blockHeight": getOrCreateConfiguration(target).setBlockHeight(property(camelContext, java.lang.Long.class, value)); return true;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": target.setBridgeErrorHandler(property(camelContext, boolean.class, value)); return true;
        case "casperservice":
        case "casperService": getOrCreateConfiguration(target).setCasperService(property(camelContext, com.syntifi.casper.sdk.service.CasperService.class, value)); return true;
        case "configuration": target.setConfiguration(property(camelContext, org.apache.camel.component.casper.CasperConfiguration.class, value)); return true;
        case "deployhash":
        case "deployHash": getOrCreateConfiguration(target).setDeployHash(property(camelContext, java.lang.String.class, value)); return true;
        case "event": getOrCreateConfiguration(target).setEvent(property(camelContext, java.lang.String.class, value)); return true;
        case "key": getOrCreateConfiguration(target).setKey(property(camelContext, java.lang.String.class, value)); return true;
        case "lazystartproducer":
        case "lazyStartProducer": target.setLazyStartProducer(property(camelContext, boolean.class, value)); return true;
        case "operation": getOrCreateConfiguration(target).setOperation(property(camelContext, java.lang.String.class, value)); return true;
        case "path": getOrCreateConfiguration(target).setPath(property(camelContext, java.lang.String.class, value)); return true;
        case "publickey":
        case "publicKey": getOrCreateConfiguration(target).setPublicKey(property(camelContext, java.lang.String.class, value)); return true;
        case "purseuref":
        case "purseUref": getOrCreateConfiguration(target).setPurseUref(property(camelContext, java.lang.String.class, value)); return true;
        case "stateroothash":
        case "stateRootHash": getOrCreateConfiguration(target).setStateRootHash(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Class<?> getOptionType(String name, boolean ignoreCase) {
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": return boolean.class;
        case "blockhash":
        case "blockHash": return java.lang.String.class;
        case "blockheight":
        case "blockHeight": return java.lang.Long.class;
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": return boolean.class;
        case "casperservice":
        case "casperService": return com.syntifi.casper.sdk.service.CasperService.class;
        case "configuration": return org.apache.camel.component.casper.CasperConfiguration.class;
        case "deployhash":
        case "deployHash": return java.lang.String.class;
        case "event": return java.lang.String.class;
        case "key": return java.lang.String.class;
        case "lazystartproducer":
        case "lazyStartProducer": return boolean.class;
        case "operation": return java.lang.String.class;
        case "path": return java.lang.String.class;
        case "publickey":
        case "publicKey": return java.lang.String.class;
        case "purseuref":
        case "purseUref": return java.lang.String.class;
        case "stateroothash":
        case "stateRootHash": return java.lang.String.class;
        default: return null;
        }
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        CasperComponent target = (CasperComponent) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "autowiredenabled":
        case "autowiredEnabled": return target.isAutowiredEnabled();
        case "blockhash":
        case "blockHash": return getOrCreateConfiguration(target).getBlockHash();
        case "blockheight":
        case "blockHeight": return getOrCreateConfiguration(target).getBlockHeight();
        case "bridgeerrorhandler":
        case "bridgeErrorHandler": return target.isBridgeErrorHandler();
        case "casperservice":
        case "casperService": return getOrCreateConfiguration(target).getCasperService();
        case "configuration": return target.getConfiguration();
        case "deployhash":
        case "deployHash": return getOrCreateConfiguration(target).getDeployHash();
        case "event": return getOrCreateConfiguration(target).getEvent();
        case "key": return getOrCreateConfiguration(target).getKey();
        case "lazystartproducer":
        case "lazyStartProducer": return target.isLazyStartProducer();
        case "operation": return getOrCreateConfiguration(target).getOperation();
        case "path": return getOrCreateConfiguration(target).getPath();
        case "publickey":
        case "publicKey": return getOrCreateConfiguration(target).getPublicKey();
        case "purseuref":
        case "purseUref": return getOrCreateConfiguration(target).getPurseUref();
        case "stateroothash":
        case "stateRootHash": return getOrCreateConfiguration(target).getStateRootHash();
        default: return null;
        }
    }
}

